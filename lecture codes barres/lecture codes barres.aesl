<!DOCTYPE aesl-source>
<network>


<!--list of global events-->
<event size="3" name="bits"/>
<constant value="290" name="proxInf"/>
<constant value="480" name="proxSup"/>
<constant value="100" name="vitesseMax"/>
<constant value="36" name="vitesseRotation"/>


<!--node Thymio sur DESKTOP-782PLEO - 6028-->
<node name="Thymio sur DESKTOP-782PLEO - 6028" nodeId="{39a37965-47a5-40fb-b5ac-8679b14bba75}"><![CDATA[
#comment ca marche ? 

#quand on appuie sur button.forward le robot se dirige vers une ligne et fait le tour complet du circuit en changeant de couleur aprés chaque lectude de code barre 



var val #valeur du capteur prox.ground.delta[0]

var val1 #valeur du capteur prox.ground.delta[1]

var etat #si == 2 on suit la ligne 

var bit1 var bit2 var bit3   #valeur de chaque bit 0 ou 1 

var tmpCode #temps qu'il faut pour parcourir un code barre=4*2.5cm=10cm 

var tmpBit1 #temps dans lequel le robot est dans le premier bit  

var tmpBit2   var tmpBit3 

var lecture # va de 0 à la durée qu'il faut pour parcourir un code

var nombre_lu 

var amorce

var tmp #variable temporaire

tmpCode=22

tmpBit1=8

tmpBit2=tmpBit1+6

tmpBit3=tmpBit2+6

lecture=0

###### sub allumer 

sub allumer

nombre_lu= bit1+2*bit2+4*bit3

if nombre_lu==0 then
	
	call leds.top(0,0,0)
	
	end
	
if nombre_lu==1 then
	
	call leds.top(32,0,0)
	
	end	
	
	if nombre_lu==2 then
	
	call leds.top(0,32,0)
	
	end
	
	if nombre_lu==3 then
	
	call leds.top(0,0,32)
	
	end
	
	if nombre_lu==4 then
	
	call leds.top(20,20,0)
	
	end
	
	if nombre_lu==5 then
	
	call leds.top(32,0,20)
	
	end
	
	if nombre_lu==6 then
	
	call leds.top(0,32,20)
	
	end
	


	
#######fin sub allumer


onevent prox 

val=prox.ground.delta[0]

val1=prox.ground.delta[1]


###  si on est dans le gris idéal 

if val>proxInf and val <proxSup  then

	etat=2 #faire le suivi de ligne
	
	end 
	
### et on lit les codes barres simultanément:
 
	if  lecture>tmpCode then  #10 cm atteints en tmpCode*10ms  code lu 
	
		amorce=0  #raz 
	
		lecture=0  #remettre le compteur à 0
	
	callsub allumer #allumer aprés la lecture du code
	
	end

if  val1<750   and   lecture==0 then #on est dans le noir et y a pas de code en cours alors c'est un nouveau code 

	amorce=1   #nouvel amorce 

end

if  amorce==1 then  #si nouvel amorce alors 
	
	lecture++  #on déclenche le compteur du temps 
	
			if  lecture ==tmpBit1 then  #si le temps est egal a tmpBit1 le robot est dans le 1er bit de valeurs 

				if val1<750 then  #on pioche la valeur du bit1 
			
            	bit1=0  #si noir
			
            	else 
			
            	bit1=1 #si blanc
			
            	end
			end
			
			if  lecture ==tmpBit2 then  #le robot est sur le bit2
			
            	if val1<750 then
			
            	bit2=0  
			
            	else 
			
            	bit2=1
			
            	end
			
            end
			
			if  lecture ==tmpBit3 then  #le robot est sur le bit3
			
					if val1<750 then
				
				bit3=0 
				
				else 
				
				bit3=1
				
				end
			
			end
			
				
				
			
end					
																										
#callsub allumer #allumer apres la lecture des 3 bits 

emit bits[bit1 ,bit2 ,bit3 ]
		







####################################  suivi de ligne 

if  etat==2 then  #faire le suivi de ligne
	


if 		 val > 	proxSup	then   # trop sombre, aller à droite

		motor.left.target	 =	-vitesseRotation

		motor.right.target = vitesseRotation
		
call leds.circle(0,0,0,0,0,0,32,32)


tmp=0 #si ca tourne on arrete de compter

if lecture>0 then
	
	tmp-- 

	lecture=lecture+tmp
	
lecture=lecture+tmp

end


elseif 	 val <   proxInf  	 then   # trop claire, aller à gauche

		motor.left.target	 =	 vitesseRotation #50

		motor.right.target =   -vitesseRotation

call leds.circle(0,32,32,0,0,0,0,0)

tmp=0 #si ca tourne on arrete de compter

if lecture>0 then
	
	tmp-- 
	

lecture=lecture+tmp

end


else 

		motor.left.target	 =vitesseMax	#280

		motor.right.target =  vitesseMax

call leds.bottom.right(0,0,0)

call leds.bottom.left(0,0,0)

call leds.circle(32,32,0,0,0,0,0,32)

end

end

########################### fin suivi de ligne





#commandes manuelles :

onevent button.forward    #marche avant 
	
	
	motor.left.target	 =	200
	
	motor.right.target = 200
	
call leds.bottom.left(0,0,0)

call leds.bottom.right(0,0,0)

call leds.top(30,0,10)
	
onevent button.center #arret manuel
	
	etat=1
	
if etat==1 then
		
	
	motor.left.target	 =	0
	
	motor.right.target = 0
	
call leds.bottom.left(0,0,0)

call leds.bottom.right(0,0,0)

call leds.top(30,0,0)
	
	end



onevent button.left #tourner vers la gauche

     motor.left.target = - 200
	 
	 motor.right.target = 200
	 
	 call leds.top(10,0,30)

onevent button.right #tourner vers la droite
   
     motor.left.target =  200
     
     motor.right.target = -  200
		
	call leds.top(10,0,30)	
		
onevent button.backward #marche arrière
 
     motor.left.target =  -300
	 
	 motor.right.target = - 300
     
     ]]></node>


</network>
